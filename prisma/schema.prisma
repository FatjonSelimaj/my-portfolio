generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  email     String      @unique
  password  String
  name      String?
  gender    String      @default("male")  
  portfolios Portfolio[]
  details   UserDetails? // ✅ Corretto: Non serve `@relation` qui, la relazione è definita in `UserDetails`

  Article Article[]

  PasswordResetToken PasswordResetToken[]
}

model Portfolio {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  content   String
  createdAt DateTime @default(now())
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
}

model UserDetails {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  userId    String      @unique @db.ObjectId  // Chiave esterna
  user      User       @relation(fields: [userId], references: [id]) // ✅ Mantiene la relazione corretta con User
  firstName String
  lastName  String
  bio       String?
  phone     String?
  imageUrl String? 
  paintings Painting[]
} 

model Painting {
  id        String   @id @default(auto()) @db.ObjectId @map("_id")
  title     String
  content   String
  userId    String   @db.ObjectId
  user      UserDetails  @relation(fields: [userId], references: [id]) // ✅ Relazione corretta con UserDetails
}

model Article {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  content   String
  createdAt DateTime @default(now())
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
}

model PasswordResetToken {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  token     String   @unique
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  expiresAt DateTime
  createdAt DateTime @default(now())
}
